name: Build and deploy

on:
  push:
    branches:
      - master
    paths:
      - ".github/workflows/deploy.yml"
      - "app-backend/**"
      - "app-frontend/**"
      - "Dockerfile.pipeline"
      - "pom.xml"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "adopt"
          check-latest: false

      - name: Change wrapper permissions
        run: chmod +x ./mvnw

      - name: Clean build dir
        run: ./mvnw clean

      - name: Package to JAR
        run: ./mvnw package

      - name: Upload generated JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: output-jar
          path: ${{ env.SUBPROJECT_ROOT }}/.bin/pm-web-panel.jar
          retention-days: 1

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download generated JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: output-jar
          path: ${{ github.workspace }}/docker

      - name: Set up builder
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build the Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.pipeline
          push: true
          tags: milosz08/pm-web-panel:latest

      - name: Logout from Docker Hub
        run: docker logout

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      PM2_APP_NAME: "PMWebPanel"
      SERVER_OUTPUT: "/var/www/pm-web-panel"
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      SSH_PORT: ${{ secrets.SSH_PORT }}
      SSH_KEY: ${{ secrets.SSH_KEY }}
      SSH_PASSPHRASE: ${{ secrets.SSH_PASSPHRASE }}

    steps:
      - name: Download generated JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: output-jar

      - name: Stop existing process
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USERNAME }}
          port: ${{ env.SSH_PORT }}
          key: ${{ env.SSH_KEY }}
          passphrase: ${{ env.SSH_PASSPHRASE }}
          script: ~/exec/process stop ${{ env.PM2_APP_NAME }}

      - name: Move files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USERNAME }}
          port: ${{ env.SSH_PORT }}
          key: ${{ env.SSH_KEY }}
          passphrase: ${{ env.SSH_PASSPHRASE }}
          source: "pm-web-panel.jar"
          target: ${{ env.SERVER_OUTPUT }}
          rm: true

      - name: Re-create config file
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USERNAME }}
          port: ${{ env.SSH_PORT }}
          key: ${{ env.SSH_KEY }}
          passphrase: ${{ env.SSH_PASSPHRASE }}
          script: ~/exec/make-conf ${{ env.SERVER_OUTPUT }} "${{ secrets.CONFIG_FILE_CONTENT }}"

      - name: Start process
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USERNAME }}
          port: ${{ env.SSH_PORT }}
          key: ${{ env.SSH_KEY }}
          passphrase: ${{ env.SSH_PASSPHRASE }}
          script: ~/exec/process start ${{ env.PM2_API_NAME }}
